#python3 -m doctest -v ./tests/2-matrix_divided.txt

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

#SUCCESS
>>> matrix = [[1, 2, 3], [4, 5, 6.7]]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.35]]

>>> matrix = [[1, 2, 3], [4, 5, 6.7]]
>>> print(matrix_divided(matrix, float("inf")))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[-1.5], [-2.5]]
>>> print(matrix_divided(matrix, 2.5))
[[-0.6], [-1.0]]

>>> matrix = [[True], [False]]
>>> print(matrix_divided(matrix, True))
[[1.0], [0.0]]

#Empty matrix
>>> print(matrix_divided(None, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[], [], []]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#Different sized lists in matrix:
>>> matrix = [[1, 2, 3], [4]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6], [7]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

#div as 0 or non-int or non-float:
>>> matrix = [[1, 2], [3, 4]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
